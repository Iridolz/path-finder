{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nexports.supportsMutation = exports.warnsIfNotActing = exports.isPrimaryRenderer = exports.noTimeout = exports.cancelTimeout = exports.scheduleTimeout = exports.run = exports.idlePriority = exports.now = undefined;\n\nvar _scheduler = require('scheduler');\n\nObject.defineProperty(exports, 'now', {\n  enumerable: true,\n  get: function get() {\n    return _scheduler.unstable_now;\n  }\n});\nObject.defineProperty(exports, 'idlePriority', {\n  enumerable: true,\n  get: function get() {\n    return _scheduler.unstable_IdlePriority;\n  }\n});\nObject.defineProperty(exports, 'run', {\n  enumerable: true,\n  get: function get() {\n    return _scheduler.unstable_runWithPriority;\n  }\n});\nexports.appendInitialChild = appendInitialChild;\nexports.createInstance = createInstance;\nexports.createTextInstance = createTextInstance;\nexports.finalizeInitialChildren = finalizeInitialChildren;\nexports.getPublicInstance = getPublicInstance;\nexports.prepareForCommit = prepareForCommit;\nexports.preparePortalMount = preparePortalMount;\nexports.prepareUpdate = prepareUpdate;\nexports.resetAfterCommit = resetAfterCommit;\nexports.resetTextContent = resetTextContent;\nexports.shouldDeprioritizeSubtree = shouldDeprioritizeSubtree;\nexports.getRootHostContext = getRootHostContext;\nexports.getChildHostContext = getChildHostContext;\nexports.shouldSetTextContent = shouldSetTextContent;\nexports.appendChild = appendChild;\nexports.appendChildToContainer = appendChildToContainer;\nexports.insertBefore = insertBefore;\nexports.insertInContainerBefore = insertInContainerBefore;\nexports.removeChild = removeChild;\nexports.removeChildFromContainer = removeChildFromContainer;\nexports.commitTextUpdate = commitTextUpdate;\nexports.commitMount = commitMount;\nexports.commitUpdate = commitUpdate;\nexports.hideInstance = hideInstance;\nexports.hideTextInstance = hideTextInstance;\nexports.unhideInstance = unhideInstance;\nexports.unhideTextInstance = unhideTextInstance;\nexports.clearContainer = clearContainer;\n\nvar _Core = require('konva/lib/Core');\n\nvar _Core2 = _interopRequireDefault(_Core);\n\nvar _makeUpdates = require('./makeUpdates');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar NO_CONTEXT = {};\nvar UPDATE_SIGNAL = {}; // for react-spring capability\n\n_Core2.default.Node.prototype._applyProps = _makeUpdates.applyNodeProps;\n\nfunction appendInitialChild(parentInstance, child) {\n  if (typeof child === 'string') {\n    // Noop for string children of Text (eg <Text>foo</Text>)\n    console.error('Do not use plain text as child of Konva.Node. You are using text: ' + child);\n    return;\n  }\n\n  parentInstance.add(child);\n  (0, _makeUpdates.updatePicture)(parentInstance);\n}\n\nfunction createInstance(type, props, internalInstanceHandle) {\n  var NodeClass = _Core2.default[type];\n\n  if (!NodeClass) {\n    console.error('Konva has no node with the type ' + type + '. Group will be used instead. If you use minimal version of react-konva, just import required nodes into Konva: \"import \"konva/lib/shapes/' + type + '\"  If you want to render DOM elements as part of canvas tree take a look into this demo: https://konvajs.github.io/docs/react/DOM_Portal.html');\n    NodeClass = _Core2.default.Group;\n  } // we need to split props into events and non events\n  // we we can pass non events into constructor directly\n  // that way the performance should be better\n  // we we apply change \"applyNodeProps\"\n  // then it will trigger change events on first run\n  // but we don't need them!\n\n\n  var propsWithoutEvents = {};\n  var propsWithOnlyEvents = {};\n\n  for (var key in props) {\n    var isEvent = key.slice(0, 2) === 'on';\n\n    if (isEvent) {\n      propsWithOnlyEvents[key] = props[key];\n    } else {\n      propsWithoutEvents[key] = props[key];\n    }\n  }\n\n  var instance = new NodeClass(propsWithoutEvents);\n  (0, _makeUpdates.applyNodeProps)(instance, propsWithOnlyEvents);\n  return instance;\n}\n\nfunction createTextInstance(text, rootContainerInstance, internalInstanceHandle) {\n  console.error('Text components are not supported for now in ReactKonva. Your text is: \"' + text + '\"');\n}\n\nfunction finalizeInitialChildren(domElement, type, props) {\n  return false;\n}\n\nfunction getPublicInstance(instance) {\n  return instance;\n}\n\nfunction prepareForCommit() {\n  return null;\n}\n\nfunction preparePortalMount() {\n  return null;\n}\n\nfunction prepareUpdate(domElement, type, oldProps, newProps) {\n  return UPDATE_SIGNAL;\n}\n\nfunction resetAfterCommit() {// Noop\n}\n\nfunction resetTextContent(domElement) {// Noop\n}\n\nfunction shouldDeprioritizeSubtree(type, props) {\n  return false;\n}\n\nfunction getRootHostContext() {\n  return NO_CONTEXT;\n}\n\nfunction getChildHostContext() {\n  return NO_CONTEXT;\n}\n\nvar scheduleTimeout = exports.scheduleTimeout = setTimeout;\nvar cancelTimeout = exports.cancelTimeout = clearTimeout;\nvar noTimeout = exports.noTimeout = -1; // export const schedulePassiveEffects = scheduleDeferredCallback;\n// export const cancelPassiveEffects = cancelDeferredCallback;\n\nfunction shouldSetTextContent(type, props) {\n  return false;\n} // The Konva renderer is secondary to the React DOM renderer.\n\n\nvar isPrimaryRenderer = exports.isPrimaryRenderer = false;\nvar warnsIfNotActing = exports.warnsIfNotActing = true;\nvar supportsMutation = exports.supportsMutation = true;\n\nfunction appendChild(parentInstance, child) {\n  if (child.parent === parentInstance) {\n    child.moveToTop();\n  } else {\n    parentInstance.add(child);\n  }\n\n  (0, _makeUpdates.updatePicture)(parentInstance);\n}\n\nfunction appendChildToContainer(parentInstance, child) {\n  if (child.parent === parentInstance) {\n    child.moveToTop();\n  } else {\n    parentInstance.add(child);\n  }\n\n  (0, _makeUpdates.updatePicture)(parentInstance);\n}\n\nfunction insertBefore(parentInstance, child, beforeChild) {\n  // child._remove() will not stop dragging\n  // but child.remove() will stop it, but we don't need it\n  // removing will reset zIndexes\n  child._remove();\n\n  parentInstance.add(child);\n  child.setZIndex(beforeChild.getZIndex());\n  (0, _makeUpdates.updatePicture)(parentInstance);\n}\n\nfunction insertInContainerBefore(parentInstance, child, beforeChild) {\n  insertBefore(parentInstance, child, beforeChild);\n}\n\nfunction removeChild(parentInstance, child) {\n  child.destroy();\n  child.off(_makeUpdates.EVENTS_NAMESPACE);\n  (0, _makeUpdates.updatePicture)(parentInstance);\n}\n\nfunction removeChildFromContainer(parentInstance, child) {\n  child.destroy();\n  child.off(_makeUpdates.EVENTS_NAMESPACE);\n  (0, _makeUpdates.updatePicture)(parentInstance);\n}\n\nfunction commitTextUpdate(textInstance, oldText, newText) {\n  console.error('Text components are not yet supported in ReactKonva. You text is: \"' + newText + '\"');\n}\n\nfunction commitMount(instance, type, newProps) {// Noop\n}\n\nfunction commitUpdate(instance, updatePayload, type, oldProps, newProps) {\n  (0, _makeUpdates.applyNodeProps)(instance, newProps, oldProps);\n}\n\nfunction hideInstance(instance) {\n  instance.hide();\n  (0, _makeUpdates.updatePicture)(instance);\n}\n\nfunction hideTextInstance(textInstance) {// Noop\n}\n\nfunction unhideInstance(instance, props) {\n  if (props.visible == null || props.visible) {\n    instance.show();\n  }\n}\n\nfunction unhideTextInstance(textInstance, text) {// Noop\n}\n\nfunction clearContainer(container) {// Noop\n}","map":{"version":3,"sources":["/home/bastien/delivery/perso/path-finder/node_modules/react-konva/lib/ReactKonvaHostConfig.js"],"names":["exports","__esModule","supportsMutation","warnsIfNotActing","isPrimaryRenderer","noTimeout","cancelTimeout","scheduleTimeout","run","idlePriority","now","undefined","_scheduler","require","Object","defineProperty","enumerable","get","unstable_now","unstable_IdlePriority","unstable_runWithPriority","appendInitialChild","createInstance","createTextInstance","finalizeInitialChildren","getPublicInstance","prepareForCommit","preparePortalMount","prepareUpdate","resetAfterCommit","resetTextContent","shouldDeprioritizeSubtree","getRootHostContext","getChildHostContext","shouldSetTextContent","appendChild","appendChildToContainer","insertBefore","insertInContainerBefore","removeChild","removeChildFromContainer","commitTextUpdate","commitMount","commitUpdate","hideInstance","hideTextInstance","unhideInstance","unhideTextInstance","clearContainer","_Core","_Core2","_interopRequireDefault","_makeUpdates","obj","default","NO_CONTEXT","UPDATE_SIGNAL","Node","prototype","_applyProps","applyNodeProps","parentInstance","child","console","error","add","updatePicture","type","props","internalInstanceHandle","NodeClass","Group","propsWithoutEvents","propsWithOnlyEvents","key","isEvent","slice","instance","text","rootContainerInstance","domElement","oldProps","newProps","setTimeout","clearTimeout","parent","moveToTop","beforeChild","_remove","setZIndex","getZIndex","destroy","off","EVENTS_NAMESPACE","textInstance","oldText","newText","updatePayload","hide","visible","show","container"],"mappings":"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","sourcesContent":["'use strict';\n\nexports.__esModule = true;\nexports.supportsMutation = exports.warnsIfNotActing = exports.isPrimaryRenderer = exports.noTimeout = exports.cancelTimeout = exports.scheduleTimeout = exports.run = exports.idlePriority = exports.now = undefined;\n\nvar _scheduler = require('scheduler');\n\nObject.defineProperty(exports, 'now', {\n  enumerable: true,\n  get: function get() {\n    return _scheduler.unstable_now;\n  }\n});\nObject.defineProperty(exports, 'idlePriority', {\n  enumerable: true,\n  get: function get() {\n    return _scheduler.unstable_IdlePriority;\n  }\n});\nObject.defineProperty(exports, 'run', {\n  enumerable: true,\n  get: function get() {\n    return _scheduler.unstable_runWithPriority;\n  }\n});\nexports.appendInitialChild = appendInitialChild;\nexports.createInstance = createInstance;\nexports.createTextInstance = createTextInstance;\nexports.finalizeInitialChildren = finalizeInitialChildren;\nexports.getPublicInstance = getPublicInstance;\nexports.prepareForCommit = prepareForCommit;\nexports.preparePortalMount = preparePortalMount;\nexports.prepareUpdate = prepareUpdate;\nexports.resetAfterCommit = resetAfterCommit;\nexports.resetTextContent = resetTextContent;\nexports.shouldDeprioritizeSubtree = shouldDeprioritizeSubtree;\nexports.getRootHostContext = getRootHostContext;\nexports.getChildHostContext = getChildHostContext;\nexports.shouldSetTextContent = shouldSetTextContent;\nexports.appendChild = appendChild;\nexports.appendChildToContainer = appendChildToContainer;\nexports.insertBefore = insertBefore;\nexports.insertInContainerBefore = insertInContainerBefore;\nexports.removeChild = removeChild;\nexports.removeChildFromContainer = removeChildFromContainer;\nexports.commitTextUpdate = commitTextUpdate;\nexports.commitMount = commitMount;\nexports.commitUpdate = commitUpdate;\nexports.hideInstance = hideInstance;\nexports.hideTextInstance = hideTextInstance;\nexports.unhideInstance = unhideInstance;\nexports.unhideTextInstance = unhideTextInstance;\nexports.clearContainer = clearContainer;\n\nvar _Core = require('konva/lib/Core');\n\nvar _Core2 = _interopRequireDefault(_Core);\n\nvar _makeUpdates = require('./makeUpdates');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar NO_CONTEXT = {};\nvar UPDATE_SIGNAL = {};\n\n// for react-spring capability\n_Core2.default.Node.prototype._applyProps = _makeUpdates.applyNodeProps;\n\nfunction appendInitialChild(parentInstance, child) {\n  if (typeof child === 'string') {\n    // Noop for string children of Text (eg <Text>foo</Text>)\n    console.error('Do not use plain text as child of Konva.Node. You are using text: ' + child);\n    return;\n  }\n\n  parentInstance.add(child);\n\n  (0, _makeUpdates.updatePicture)(parentInstance);\n}\n\nfunction createInstance(type, props, internalInstanceHandle) {\n  var NodeClass = _Core2.default[type];\n  if (!NodeClass) {\n    console.error('Konva has no node with the type ' + type + '. Group will be used instead. If you use minimal version of react-konva, just import required nodes into Konva: \"import \"konva/lib/shapes/' + type + '\"  If you want to render DOM elements as part of canvas tree take a look into this demo: https://konvajs.github.io/docs/react/DOM_Portal.html');\n    NodeClass = _Core2.default.Group;\n  }\n\n  // we need to split props into events and non events\n  // we we can pass non events into constructor directly\n  // that way the performance should be better\n  // we we apply change \"applyNodeProps\"\n  // then it will trigger change events on first run\n  // but we don't need them!\n  var propsWithoutEvents = {};\n  var propsWithOnlyEvents = {};\n\n  for (var key in props) {\n    var isEvent = key.slice(0, 2) === 'on';\n    if (isEvent) {\n      propsWithOnlyEvents[key] = props[key];\n    } else {\n      propsWithoutEvents[key] = props[key];\n    }\n  }\n\n  var instance = new NodeClass(propsWithoutEvents);\n\n  (0, _makeUpdates.applyNodeProps)(instance, propsWithOnlyEvents);\n\n  return instance;\n}\n\nfunction createTextInstance(text, rootContainerInstance, internalInstanceHandle) {\n  console.error('Text components are not supported for now in ReactKonva. Your text is: \"' + text + '\"');\n}\n\nfunction finalizeInitialChildren(domElement, type, props) {\n  return false;\n}\n\nfunction getPublicInstance(instance) {\n  return instance;\n}\n\nfunction prepareForCommit() {\n  return null;\n}\n\nfunction preparePortalMount() {\n  return null;\n}\n\nfunction prepareUpdate(domElement, type, oldProps, newProps) {\n  return UPDATE_SIGNAL;\n}\n\nfunction resetAfterCommit() {\n  // Noop\n}\n\nfunction resetTextContent(domElement) {\n  // Noop\n}\n\nfunction shouldDeprioritizeSubtree(type, props) {\n  return false;\n}\n\nfunction getRootHostContext() {\n  return NO_CONTEXT;\n}\n\nfunction getChildHostContext() {\n  return NO_CONTEXT;\n}\n\nvar scheduleTimeout = exports.scheduleTimeout = setTimeout;\nvar cancelTimeout = exports.cancelTimeout = clearTimeout;\nvar noTimeout = exports.noTimeout = -1;\n// export const schedulePassiveEffects = scheduleDeferredCallback;\n// export const cancelPassiveEffects = cancelDeferredCallback;\n\nfunction shouldSetTextContent(type, props) {\n  return false;\n}\n\n// The Konva renderer is secondary to the React DOM renderer.\nvar isPrimaryRenderer = exports.isPrimaryRenderer = false;\nvar warnsIfNotActing = exports.warnsIfNotActing = true;\nvar supportsMutation = exports.supportsMutation = true;\n\nfunction appendChild(parentInstance, child) {\n  if (child.parent === parentInstance) {\n    child.moveToTop();\n  } else {\n    parentInstance.add(child);\n  }\n\n  (0, _makeUpdates.updatePicture)(parentInstance);\n}\n\nfunction appendChildToContainer(parentInstance, child) {\n  if (child.parent === parentInstance) {\n    child.moveToTop();\n  } else {\n    parentInstance.add(child);\n  }\n  (0, _makeUpdates.updatePicture)(parentInstance);\n}\n\nfunction insertBefore(parentInstance, child, beforeChild) {\n  // child._remove() will not stop dragging\n  // but child.remove() will stop it, but we don't need it\n  // removing will reset zIndexes\n  child._remove();\n  parentInstance.add(child);\n  child.setZIndex(beforeChild.getZIndex());\n  (0, _makeUpdates.updatePicture)(parentInstance);\n}\n\nfunction insertInContainerBefore(parentInstance, child, beforeChild) {\n  insertBefore(parentInstance, child, beforeChild);\n}\n\nfunction removeChild(parentInstance, child) {\n  child.destroy();\n  child.off(_makeUpdates.EVENTS_NAMESPACE);\n  (0, _makeUpdates.updatePicture)(parentInstance);\n}\n\nfunction removeChildFromContainer(parentInstance, child) {\n  child.destroy();\n  child.off(_makeUpdates.EVENTS_NAMESPACE);\n  (0, _makeUpdates.updatePicture)(parentInstance);\n}\n\nfunction commitTextUpdate(textInstance, oldText, newText) {\n  console.error('Text components are not yet supported in ReactKonva. You text is: \"' + newText + '\"');\n}\n\nfunction commitMount(instance, type, newProps) {\n  // Noop\n}\n\nfunction commitUpdate(instance, updatePayload, type, oldProps, newProps) {\n  (0, _makeUpdates.applyNodeProps)(instance, newProps, oldProps);\n}\n\nfunction hideInstance(instance) {\n  instance.hide();\n  (0, _makeUpdates.updatePicture)(instance);\n}\n\nfunction hideTextInstance(textInstance) {\n  // Noop\n}\n\nfunction unhideInstance(instance, props) {\n  if (props.visible == null || props.visible) {\n    instance.show();\n  }\n}\n\nfunction unhideTextInstance(textInstance, text) {\n  // Noop\n}\n\nfunction clearContainer(container) {\n  // Noop\n}"]},"metadata":{},"sourceType":"script"}