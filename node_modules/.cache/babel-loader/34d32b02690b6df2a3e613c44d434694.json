{"ast":null,"code":"var _jsxFileName = \"/home/bastien/delivery/perso/path-finder/src/components/Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Stage, Layer, Rect, Text } from 'react-konva';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Main() {\n  _s();\n\n  const p = {\n    type: 0 // default rect type\n\n  };\n  const size = {\n    width: window.innerWidth,\n    height: window.innerHeight,\n    rect: 50,\n    rows: width / rect,\n    columns: height / rect\n  };\n  const [tab, setTab] = useState(Array.from({\n    length: size.rows\n  }, () => Array.from({\n    length: size.columns\n  }, () => Object.create(p)))); // Rect type\n\n  const RectType = [{\n    type: 0,\n    color: 'white',\n    name: 'empty'\n  }, {\n    type: 1,\n    color: 'black',\n    name: 'black'\n  }, {\n    type: 2,\n    color: 'green',\n    name: 'start'\n  }, {\n    type: 3,\n    color: 'red',\n    name: 'end'\n  }, {\n    type: 4,\n    color: 'grey',\n    name: 'checked '\n  }];\n\n  const nextRectType = actual => {\n    return (actual + 1) % 4;\n  };\n\n  const getColorFromType = type => {\n    return RectType[type].color;\n  };\n\n  const RectOnClick = e => {\n    let newTab = [...tab];\n    newTab[e.i][e.n].type = nextRectType(tab[e.i][e.n].type);\n    setTab(newTab);\n  };\n\n  const isRectExist = (i, n) => {\n    if (0 > i || i > size.rows - 1) return false;\n    if (0 > n || n > size.columns - 1) return false;\n    return true;\n  };\n\n  const checkPrevMoves = (i, n, prevMoves) => {\n    // console.log(prevMoves)\n    for (let index = 0; index < prevMoves.length; index++) if (prevMoves[index][0] === i && prevMoves[index][1] === n) {\n      return false;\n    }\n\n    return true;\n  };\n\n  const updatePrevMoves = (i, n, prevMoves) => {\n    if (prevMoves.length >= 4) {\n      prevMoves.shift();\n      prevMoves.push([i, n]);\n      return;\n    }\n\n    prevMoves.push([i, n]);\n  };\n\n  function sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n  const engine = async (i, n, prevMoves) => {\n    console.log(window.innerWidth); // console.log(prevMoves)\n\n    updatePrevMoves(i, n, prevMoves); // prevMoves.push([i, n])\n\n    let newTab = [...tab];\n    newTab[i][n].type = 4;\n    setTab(newTab);\n    await sleep(500);\n    if (checkPrevMoves(i + 1, n, prevMoves) === true && isRectExist(i + 1, n) === true) prevMoves.push(engine(i + 1, n, prevMoves));\n    if (checkPrevMoves(i - 1, n, prevMoves) === true && isRectExist(i - 1, n) === true) prevMoves.push(engine(i - 1, n, prevMoves));\n    if (checkPrevMoves(i, n + 1, prevMoves) === true && isRectExist(i, n + 1) === true) prevMoves.push(engine(i, n + 1, prevMoves));\n    if (checkPrevMoves(i, n - 1, prevMoves) === true && isRectExist(i, n - 1) === true) prevMoves.push(engine(i, n - 1, prevMoves));\n    return [i, n];\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Stage, {\n      width: size.width,\n      height: size.height,\n      children: /*#__PURE__*/_jsxDEV(Layer, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          x: 0,\n          y: 0,\n          text: \"RUN\",\n          fontSize: 100,\n          onClick: () => engine(0, 0, new Array())\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), tab.map((row, i) => row.map((column, n) => /*#__PURE__*/_jsxDEV(Rect, {\n          i: i,\n          n: n,\n          x: i * (size.height / size.columns),\n          y: size.height / size.rows + n * (size.height / size.rows),\n          width: size.height / size.columns,\n          height: size.height / size.rows,\n          fill: getColorFromType(column.type),\n          shadowBlur: 10,\n          onClick: e => RectOnClick(e.target.attrs)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this)))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Main, \"VDwPYsPbBtefMKZm5oui7/UJX24=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/home/bastien/delivery/perso/path-finder/src/components/Main.js"],"names":["React","useState","Stage","Layer","Rect","Text","Main","p","type","size","width","window","innerWidth","height","innerHeight","rect","rows","columns","tab","setTab","Array","from","length","Object","create","RectType","color","name","nextRectType","actual","getColorFromType","RectOnClick","e","newTab","i","n","isRectExist","checkPrevMoves","prevMoves","index","updatePrevMoves","shift","push","sleep","ms","Promise","resolve","setTimeout","engine","console","log","map","row","column","target","attrs"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Stage, Layer, Rect, Text } from 'react-konva';\n\nfunction Main() {\n    const p = {\n        type: 0 // default rect type\n    }\n\n    const size = {\n        width: window.innerWidth,\n        height: window.innerHeight,\n        rect: 50,\n        rows: width / rect,\n        columns: height / rect,\n    }\n\n    const [tab, setTab] = useState(Array.from({length: size.rows},()=> Array.from({length: size.columns}, () => Object.create(p))));\n\n    // Rect type\n    const RectType = [\n        {type: 0, color: 'white', name: 'empty'},\n        {type: 1, color: 'black', name: 'black'},\n        {type: 2, color: 'green', name: 'start'},\n        {type: 3, color: 'red', name: 'end'},\n        {type: 4, color: 'grey', name: 'checked '},\n    ]    \n\n    const nextRectType = (actual) => {\n        return (actual + 1) % 4\n    }\n\n    const getColorFromType = (type) => {\n        return RectType[type].color\n    }\n\n    const RectOnClick = (e) => {\n        let newTab = [...tab]\n        newTab[e.i][e.n].type = nextRectType(tab[e.i][e.n].type)\n        setTab(newTab)\n    }\n\n    const isRectExist = (i, n) => {\n        if (0 > i || i > size.rows - 1)\n            return false\n        if (0 > n || n > size.columns - 1)\n            return false\n        return true\n    }\n\n    const checkPrevMoves = (i, n, prevMoves) => {\n        // console.log(prevMoves)\n        for (let index = 0; index < prevMoves.length; index++)\n            if (prevMoves[index][0] === i && prevMoves[index][1] === n) {\n                return false\n            }\n        return true\n    }\n\n    const updatePrevMoves = (i, n, prevMoves) => {\n        if (prevMoves.length >= 4) {\n            prevMoves.shift()\n            prevMoves.push([i, n])\n            return\n        }\n        prevMoves.push([i, n])\n    }\n\n    function sleep(ms) {\n        return new Promise(resolve => setTimeout(resolve, ms));\n    }\n\n    const engine = async (i, n, prevMoves) => {\n        console.log(window.innerWidth)\n        // console.log(prevMoves)\n        updatePrevMoves(i, n, prevMoves)\n        // prevMoves.push([i, n])\n        let newTab = [...tab]\n        newTab[i][n].type = 4\n        setTab(newTab)\n        await sleep(500)\n        if (checkPrevMoves(i + 1, n, prevMoves) === true && isRectExist(i + 1, n) === true)\n            prevMoves.push(engine(i + 1, n, prevMoves))\n        if (checkPrevMoves(i - 1, n, prevMoves) === true && isRectExist(i - 1, n) === true)\n            prevMoves.push(engine(i - 1, n, prevMoves))\n        if (checkPrevMoves(i, n + 1, prevMoves) === true && isRectExist(i, n + 1) === true)\n            prevMoves.push(engine(i, n + 1, prevMoves))\n        if (checkPrevMoves(i, n - 1, prevMoves) === true && isRectExist(i, n - 1) === true)\n            prevMoves.push(engine(i, n - 1, prevMoves))\n        return [i, n]\n    }\n\n    return (\n      <div>\n        <Stage width={size.width} height={size.height}>\n          <Layer>\n            <Text\n            x={0}\n            y={0}\n            text='RUN'\n            fontSize={100}\n            onClick={() => engine(0, 0, new Array)}\n            />\n            {\n                tab.map((row, i) => (\n                    row.map((column, n) => (\n                        <Rect\n                        i={i}\n                        n={n}\n                        x={i * (size.height / size.columns)}\n                        y={(size.height / size.rows) + n * (size.height / size.rows)}\n                        width={(size.height / size.columns)}\n                        height={(size.height / size.rows)}\n                        fill={getColorFromType(column.type)}\n                        shadowBlur={10}\n                        onClick={e => RectOnClick(e.target.attrs)}\n                        />\n                    ))\n                ))\n            }\n          </Layer>\n        </Stage>\n      </div>\n    );\n  }\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}